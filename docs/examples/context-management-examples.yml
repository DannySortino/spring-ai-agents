# Context Management Examples
# This file demonstrates various context management configurations for workflow steps

# Example 1: Default behavior - Keep all context (no context management configuration)
agents:
  - name: "default-context-agent"
    systemPrompt: "You are a helpful assistant that maintains context throughout the conversation."
    workflow:
      type: CHAIN
      chain:
        - prompt: "Step 1: Analyze the input: {input}"
        - prompt: "Step 2: Based on previous analysis ({previousResult}), provide recommendations"
        # No contextManagement specified = keep all context (default)

---

# Example 2: Clear context before specific steps
agents:
  - name: "clear-before-agent"
    systemPrompt: "You are an assistant that clears sensitive data before certain operations."
    workflow:
      type: CHAIN
      chain:
        - prompt: "Step 1: Collect user information: {input}"
        - prompt: "Step 2: Process data securely"
          contextManagement:
            clearBefore: true
            preserveKeys:
              - "systemPrompt"
              - "agentName"
              - "isFirstInvocation"
        - prompt: "Step 3: Provide final response"

---

# Example 3: Clear context after specific steps
agents:
  - name: "clear-after-agent"
    systemPrompt: "You are an assistant that cleans up temporary data after processing."
    workflow:
      type: CHAIN
      chain:
        - prompt: "Step 1: Generate temporary analysis: {input}"
          contextManagement:
            clearAfter: true
            preserveKeys:
              - "systemPrompt"
              - "agentName"
              - "userId"
        - prompt: "Step 2: Create final report based on clean context"

---

# Example 4: Remove specific keys only
agents:
  - name: "selective-removal-agent"
    systemPrompt: "You are an assistant that removes only specific sensitive information."
    workflow:
      type: CHAIN
      chain:
        - prompt: "Step 1: Process user request with credentials: {input}"
        - prompt: "Step 2: Perform secure operation"
          contextManagement:
            removeKeys:
              - "password"
              - "apiKey"
              - "temporaryToken"
        - prompt: "Step 3: Return results without sensitive data"

---

# Example 5: Mixed context management in complex workflow
agents:
  - name: "complex-context-agent"
    systemPrompt: "You are an assistant with sophisticated context management."
    workflow:
      type: CHAIN
      chain:
        - prompt: "Step 1: Initial data collection: {input}"
        - prompt: "Step 2: Sensitive processing"
          contextManagement:
            clearBefore: true
            preserveKeys:
              - "systemPrompt"
              - "agentName"
              - "userId"
              - "sessionId"
        - tool: "external-api-call"
          contextManagement:
            clearAfter: true
            preserveKeys:
              - "systemPrompt"
              - "agentName"
              - "finalResult"
        - prompt: "Step 4: Generate final response: {finalResult}"

---

# Example 6: Tool-based workflow with context management
agents:
  - name: "tool-context-agent"
    systemPrompt: "You are an assistant that manages context around tool calls."
    workflow:
      type: CHAIN
      chain:
        - prompt: "Step 1: Prepare data for tool: {input}"
        - tool: "data-processor"
          contextManagement:
            clearBefore: true
            preserveKeys:
              - "systemPrompt"
              - "agentName"
        - tool: "result-formatter"
          contextManagement:
            clearAfter: true
            preserveKeys:
              - "systemPrompt"
              - "agentName"
              - "formattedResult"
        - prompt: "Step 4: Present final results: {formattedResult}"

---

# Example 7: Complete context clearing (security-focused)
agents:
  - name: "secure-agent"
    systemPrompt: "You are a security-focused assistant that clears all context for sensitive operations."
    workflow:
      type: CHAIN
      chain:
        - prompt: "Step 1: Collect sensitive information: {input}"
        - prompt: "Step 2: Process in isolated context"
          contextManagement:
            clearBefore: true
            # No preserveKeys = clear everything
        - prompt: "Step 3: Provide sanitized response"

---

# Example 8: Parallel workflow with context management
agents:
  - name: "parallel-context-agent"
    systemPrompt: "You are an assistant using parallel processing with context control."
    workflow:
      type: PARALLEL
      tasks:
        - name: "analysis-task"
          workflow:
            type: CHAIN
            chain:
              - prompt: "Analyze data: {input}"
              - prompt: "Clean up analysis context"
                contextManagement:
                  clearAfter: true
                  preserveKeys:
                    - "analysisResult"
        - name: "validation-task"
          workflow:
            type: CHAIN
            chain:
              - prompt: "Validate data: {input}"
              - prompt: "Clear validation context"
                contextManagement:
                  removeKeys:
                    - "temporaryValidationData"
                    - "intermediateResults"
      aggregator: "Combine analysis ({analysisResult}) and validation results: {results}"

---

# Example 9: Orchestrator workflow with context management
agents:
  - name: "orchestrator-context-agent"
    systemPrompt: "You are a manager coordinating workers with context control."
    workflow:
      type: ORCHESTRATOR
      managerPrompt: "Analyze the request and delegate to appropriate workers: {input}"
      workers:
        - name: "data-worker"
          workflow:
            type: CHAIN
            chain:
              - prompt: "Process data: {input}"
              - prompt: "Clean sensitive data"
                contextManagement:
                  removeKeys:
                    - "rawData"
                    - "personalInfo"
        - name: "analysis-worker"
          workflow:
            type: CHAIN
            chain:
              - prompt: "Perform analysis: {input}"
              - prompt: "Clear analysis cache"
                contextManagement:
                  clearAfter: true
                  preserveKeys:
                    - "finalAnalysis"
      synthesizerPrompt: "Synthesize results from workers: {workerResults}"

---

# Example 10: Routing workflow with context management
agents:
  - name: "routing-context-agent"
    systemPrompt: "You are a router that manages context based on request type."
    workflow:
      type: ROUTING
      routes:
        sensitive:
          prompt: "Handle sensitive request with context clearing"
          # Context management can be added to RouteDef in future enhancement
        public:
          prompt: "Handle public request: {input}"
        tool-based:
          tool: "external-processor"